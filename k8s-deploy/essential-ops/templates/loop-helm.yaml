{{- /*
  Loop through all defined applications in .Values.applications
  and create an ArgoCD Application resource for each.
*/}}
{{- range $appName, $appConfig := .Values.applications }}
{{- if $appConfig.enabled }}
# --- ArgoCD Application for {{ $appName }} ---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $appName | quote }}
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: {{ $appConfig.destinationNamespace | quote }}
  sources:
    # Main source for the Helm Chart
    - chart: {{ $appConfig.chartName | quote }}
      path: {{ $appConfig.path | quote }}
      repoURL: {{ $appConfig.chartURL | default $.Values.global.gitRepoURL | quote }}
      targetRevision: {{ $appConfig.chartTargetRevision | default $.Values.global.gitTargetRevision | quote }}
      helm:
        valueFiles:
          - $values/{{ $appConfig.valuesFile }}
    - repoURL: {{ $appConfig.valuesURL | default $.Values.global.gitRepoURL | quote }}
      targetRevision: {{ $appConfig.valuesTargetRevision | default $.Values.global.gitTargetRevision | quote }}
      ref: values
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
{{- /* A generic loop for creating volumes */}}
{{- if $appConfig.volumes }}
{{- range $volumeName, $volumeConfig := $appConfig.volumes }}
{{- if eq ($volumeConfig.type | default "nfs") "nfs" }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ printf "%s-%s" $appName $volumeName }}
spec:
  storageClassName: {{ $volumeConfig.storageClassName | quote }}
  capacity:
    storage: {{ $volumeConfig.size | quote }}
  accessModes:
    - {{ default "ReadWriteOnce" $volumeConfig.accessMode | quote }}
  persistentVolumeReclaimPolicy: {{ $volumeConfig.policy | default "Retain" | quote }}
  nfs:
    path: {{ $volumeConfig.nfs.path | quote }}
    server: {{ $volumeConfig.nfs.server | default $.Values.global.nfs.server | quote }}
    readOnly: false
---
{{- end }} {{/* End of PV creation for NFS type */}}
{{- if $volumeConfig.pvc }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ printf "%s-%s" $appName $volumeName }}-pvc
  namespace: {{ $appConfig.destinationNamespace | quote }}
spec:
  accessModes:
    - {{ default "ReadWriteOnce" $volumeConfig.accessMode | quote }}
  storageClassName: {{ $volumeConfig.storageClassName | quote }}
  resources:
    requests:
      storage: {{ $volumeConfig.size | quote }}
---
{{- end }} {{/* End of if pvc */}}
  {{- end }}{{/* End of volumeConfig loop */}}
{{- end }}{{/* End of if volumes */}}
{{- end }}{{/* End of if enabled */}}
{{- end }}{{/* End of appConfig loop */}}
